defaults: &defaults 
  working_directory: ~/member-webview
  docker:
    - image: circleci/node:8.11.2
  steps:
    - checkout
    - restore_cache:
        key: dependency-cache
    - run: 
        name: Install packages
        command: yarn
    - save_cache:
        key: dependency-cache
        paths:
          - ~/.cache/yarn
    - run: 
        name: Rebuild node-sass
        command: npm rebuild node-sass
    - run: 
        name: Install aws command line
        command: sudo apt-get update && sudo apt-get install -y awscli
    - run:
        name: Deploy $ENV
        command: yarn build && aws s3 rm $S3_BUCKET --recursive --region ap-southeast-1 && aws s3 cp --recursive ./build $S3_BUCKET --region ap-southeast-1
    - run:
        name: activate cloud front
        command: aws configure set preview.cloudfront true && aws configure set preview.create-invalidation true
    - run:
        name: Invalidate cloudfront
        command: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths /index.html
version: 2
jobs:
  deploy-staging:
    environment:
      ENV: staging
      S3_BUCKET: s3://member-webview-staging
      CLOUDFRONT_ID: E10NY7095GDBYB
    <<: *defaults
  deploy-sandbox:
    environment:
      ENV: sandbox
      S3_BUCKET: s3://member-webview-sandbox
      CLOUDFRONT_ID: E3DIIXR2MX7CX3
    <<: *defaults
  deploy-uat:
    environment:
      ENV: uat
      S3_BUCKET: s3://member-webview-uat
      CLOUDFRONT_ID: E3MTBSOK8KPSR9
    <<: *defaults
  deploy-dev:
    environment:
      ENV: development
      S3_BUCKET: s3://member-webview-dev
      CLOUDFRONT_ID: E1KWQTBWJD7XCH
    <<: *defaults
  deploy-production:
    environment:
      ENV: production
      S3_BUCKET: s3://member-webview
      CLOUDFRONT_ID: E13L1HWW9VV8N4
    <<: *defaults
workflows:
  version: 2
  build_and_test:
    jobs:
      - deploy-staging:
          filters:
            branches:
              only: staging
      - deploy-sandbox:
          filters:
            branches:
              only: master
      - deploy-uat:
          filters:
            branches:
              only: uat
      - deploy-dev:
          filters:
            branches:
              only: dev
      - deploy-production:
          filters:
            branches:
              only: master
